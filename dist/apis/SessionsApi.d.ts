/**
 * Autonomous Hive REST API
 * OpenAPI documentation for all Autonomous Hive API endpoints.
 *
 * The version of the OpenAPI document: 0.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CreateSessionRequest, Session } from '../models';
export interface CreateSessionOperationRequest {
    createSessionRequest?: CreateSessionRequest;
}
export interface GetSessionRequest {
    sessionToken: any;
}
/**
 * SessionsApi - interface
 *
 * @export
 * @interface SessionsApiInterface
 */
export interface SessionsApiInterface {
    /**
     * Log in to the service and retrieve a Session token to authenticate future calls to the service
     * @summary Create Session
     * @param {CreateSessionRequest} [createSessionRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SessionsApiInterface
     */
    createSessionRaw(requestParameters: CreateSessionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Session>>;
    /**
     * Log in to the service and retrieve a Session token to authenticate future calls to the service
     * Create Session
     */
    createSession(requestParameters: CreateSessionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Session>;
    /**
     * End any active session tokens
     * @summary Delete Active Sessions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SessionsApiInterface
     */
    deleteSessionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * End any active session tokens
     * Delete Active Sessions
     */
    deleteSessions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves Session details
     * @summary Get Session
     * @param {any} sessionToken An active session token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SessionsApiInterface
     */
    getSessionRaw(requestParameters: GetSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Session>>;
    /**
     * Retrieves Session details
     * Get Session
     */
    getSession(requestParameters: GetSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Session>;
}
/**
 *
 */
export declare class SessionsApi extends runtime.BaseAPI implements SessionsApiInterface {
    /**
     * Log in to the service and retrieve a Session token to authenticate future calls to the service
     * Create Session
     */
    createSessionRaw(requestParameters: CreateSessionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Session>>;
    /**
     * Log in to the service and retrieve a Session token to authenticate future calls to the service
     * Create Session
     */
    createSession(requestParameters?: CreateSessionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Session>;
    /**
     * End any active session tokens
     * Delete Active Sessions
     */
    deleteSessionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * End any active session tokens
     * Delete Active Sessions
     */
    deleteSessions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Retrieves Session details
     * Get Session
     */
    getSessionRaw(requestParameters: GetSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Session>>;
    /**
     * Retrieves Session details
     * Get Session
     */
    getSession(requestParameters: GetSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Session>;
}
