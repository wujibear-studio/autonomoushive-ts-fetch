/**
 * Autonomous Hive REST API
 * OpenAPI documentation for all Autonomous Hive API endpoints.
 *
 * The version of the OpenAPI document: 0.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Colony, ColonyParams, GetColonies200Response } from '../models';
export interface CreateColonyRequest {
    colonyParams?: ColonyParams;
}
export interface GetColoniesRequest {
    limit?: any;
    name?: any;
}
export interface GetColonyRequest {
    colonyId: any;
}
export interface UpdateColonyRequest {
    colonyId: any;
    colonyParams?: ColonyParams;
}
/**
 * ColoniesApi - interface
 *
 * @export
 * @interface ColoniesApiInterface
 */
export interface ColoniesApiInterface {
    /**
     * Create a Colony to be a representation of your Company, Co-op, organization, or bridge club
     * @summary Create Colony
     * @param {ColonyParams} [colonyParams]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ColoniesApiInterface
     */
    createColonyRaw(requestParameters: CreateColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Colony>>;
    /**
     * Create a Colony to be a representation of your Company, Co-op, organization, or bridge club
     * Create Colony
     */
    createColony(requestParameters: CreateColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Colony>;
    /**
     * A list of all Colonies public information
     * @summary List Colonies
     * @param {any} [limit] Number of records to return in one call
     * @param {any} [name] Filter by Colony name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ColoniesApiInterface
     */
    getColoniesRaw(requestParameters: GetColoniesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetColonies200Response>>;
    /**
     * A list of all Colonies public information
     * List Colonies
     */
    getColonies(requestParameters: GetColoniesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetColonies200Response>;
    /**
     * Get data about a specific Colony
     * @summary Get Colony
     * @param {any} colonyId A Colony ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ColoniesApiInterface
     */
    getColonyRaw(requestParameters: GetColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Colony>>;
    /**
     * Get data about a specific Colony
     * Get Colony
     */
    getColony(requestParameters: GetColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Colony>;
    /**
     * Update details about one of your Colonies
     * @summary Update Colony
     * @param {any} colonyId A Colony ID
     * @param {ColonyParams} [colonyParams]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ColoniesApiInterface
     */
    updateColonyRaw(requestParameters: UpdateColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Colony>>;
    /**
     * Update details about one of your Colonies
     * Update Colony
     */
    updateColony(requestParameters: UpdateColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Colony>;
}
/**
 *
 */
export declare class ColoniesApi extends runtime.BaseAPI implements ColoniesApiInterface {
    /**
     * Create a Colony to be a representation of your Company, Co-op, organization, or bridge club
     * Create Colony
     */
    createColonyRaw(requestParameters: CreateColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Colony>>;
    /**
     * Create a Colony to be a representation of your Company, Co-op, organization, or bridge club
     * Create Colony
     */
    createColony(requestParameters?: CreateColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Colony>;
    /**
     * A list of all Colonies public information
     * List Colonies
     */
    getColoniesRaw(requestParameters: GetColoniesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetColonies200Response>>;
    /**
     * A list of all Colonies public information
     * List Colonies
     */
    getColonies(requestParameters?: GetColoniesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetColonies200Response>;
    /**
     * Get data about a specific Colony
     * Get Colony
     */
    getColonyRaw(requestParameters: GetColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Colony>>;
    /**
     * Get data about a specific Colony
     * Get Colony
     */
    getColony(requestParameters: GetColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Colony>;
    /**
     * Update details about one of your Colonies
     * Update Colony
     */
    updateColonyRaw(requestParameters: UpdateColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Colony>>;
    /**
     * Update details about one of your Colonies
     * Update Colony
     */
    updateColony(requestParameters: UpdateColonyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Colony>;
}
