/* tslint:disable */
/* eslint-disable */
/**
 * Autonomous Hive REST API
 * OpenAPI documentation for all Autonomous Hive API endpoints.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: hello@wujibear.studio
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ColonyParams
 */
export interface ColonyParams {
    /**
     * 
     * @type {any}
     * @memberof ColonyParams
     */
    name: any | null;
    /**
     * 
     * @type {any}
     * @memberof ColonyParams
     */
    logo?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ColonyParams
     */
    parentColonyId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ColonyParams
     */
    primaryIndustry?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ColonyParams
     */
    structureType?: ColonyParamsStructureTypeEnum;
}


/**
 * @export
 */
export const ColonyParamsStructureTypeEnum = {
    Coop: 'coop',
    NonProfit: 'non profit',
    Ceo: 'ceo',
    Shareholders: 'shareholders'
} as const;
export type ColonyParamsStructureTypeEnum = typeof ColonyParamsStructureTypeEnum[keyof typeof ColonyParamsStructureTypeEnum];


/**
 * Check if a given object implements the ColonyParams interface.
 */
export function instanceOfColonyParams(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function ColonyParamsFromJSON(json: any): ColonyParams {
    return ColonyParamsFromJSONTyped(json, false);
}

export function ColonyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ColonyParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'logo': !exists(json, 'logo') ? undefined : json['logo'],
        'parentColonyId': !exists(json, 'parentColonyId') ? undefined : json['parentColonyId'],
        'primaryIndustry': !exists(json, 'primaryIndustry') ? undefined : json['primaryIndustry'],
        'structureType': !exists(json, 'structureType') ? undefined : json['structureType'],
    };
}

export function ColonyParamsToJSON(value?: ColonyParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'logo': value.logo,
        'parentColonyId': value.parentColonyId,
        'primaryIndustry': value.primaryIndustry,
        'structureType': value.structureType,
    };
}

