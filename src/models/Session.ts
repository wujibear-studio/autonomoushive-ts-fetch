/* tslint:disable */
/* eslint-disable */
/**
 * Autonomous Hive REST API
 * OpenAPI documentation for all Autonomous Hive API endpoints.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * 
 * @export
 * @interface Session
 */
export interface Session {
    /**
     * 
     * @type {any}
     * @memberof Session
     */
    id?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Session
     */
    expiresAt?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Session
     */
    sessionToken?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Session
     */
    createdAt?: any | null;
    /**
     * 
     * @type {User}
     * @memberof Session
     */
    user?: User;
}

/**
 * Check if a given object implements the Session interface.
 */
export function instanceOfSession(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SessionFromJSON(json: any): Session {
    return SessionFromJSONTyped(json, false);
}

export function SessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Session {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'expiresAt': !exists(json, 'expires_at') ? undefined : json['expires_at'],
        'sessionToken': !exists(json, 'session_token') ? undefined : json['session_token'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
    };
}

export function SessionToJSON(value?: Session | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'expires_at': value.expiresAt,
        'session_token': value.sessionToken,
        'created_at': value.createdAt,
        'user': UserToJSON(value.user),
    };
}

